services:
  uvicorn_trt_server:
    container_name: uvicorn_trt_server_cont
    build:
      context: ./
      dockerfile: ./Dockerfile
    env_file: ./.env
    shm_size: 2gb
    ulimits:
      stack: 67108864
      memlock: -1
    ports:
      - ${API_SERVER_PORT}:8080
    volumes:
      - type: bind
        source: ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/person_images
        target: /home/triton-server/src/app/person_images
    depends_on:
      mysql:
        condition: service_healthy
      standalone:
        condition: service_started
      redis-server:
        condition: service_healthy

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-09-23T03-47-50Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    expose:
      - 9001
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.11
    command: [ "milvus", "run", "standalone" ]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - ${MILVUS_PORT}:19530
    depends_on:
      - "etcd"
      - "minio"

  attu:
    container_name: milvus-attu
    image: zilliz/attu:v2.4
    environment:
      MILVUS_URL: standalone:${MILVUS_PORT}
    ports:
      - ${ATTU_PORT}:3000
    depends_on:
      - "standalone"

  mysql:
    container_name: mariadb
    image: mariadb:10.7
    restart: always
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/store:/var/lib/mysql
      - ./app/static/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    mem_limit: 512m
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - PMA_ARBITRARY=1
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  mysql-admin:
    container_name: mariadb-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - ${PMA_GUI_PORT}:80
    mem_limit: 512m
    depends_on:
      - mysql
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}

  redis-server:
    container_name: redis-server
    image: redis:7.0.10
    restart: always
    command: /bin/bash -c 'redis-server --appendonly yes'
    sysctls:
      - net.core.somaxconn=65535
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/redis:/data
    mem_limit: 96m
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

networks:
  default:
    name: face_recog_milvus
