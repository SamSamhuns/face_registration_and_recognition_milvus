name: Python Face Registration & Recognition Test CI

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: self-hosted-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker Compose binary
        uses: actions/cache@v4
        with:
          path: ~/.docker/cli-plugins/docker-compose
          key: docker-compose-v2.39.3

      - name: Ensure Docker Compose available
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          if ! command -v docker compose >/dev/null 2>&1; then
            if [ ! -f "$DOCKER_CONFIG/cli-plugins/docker-compose" ]; then
              echo "Installing Docker Compose..."
              curl -SL https://github.com/docker/compose/releases/download/v2.39.3/docker-compose-linux-x86_64 \
                -o $DOCKER_CONFIG/cli-plugins/docker-compose
              chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
            else
              echo "Using cached Docker Compose binary"
            fi
          else
            echo "Docker Compose already installed"
          fi

      - name: Cache models
        id: cache-models
        uses: actions/cache@v4
        with:
          path: face_reg_recog_milvus/app/triton_server/models
          key: model-cache-1PTZrQwo_tv34J8fAZ6em1DEr1ymFLPvg

      - name: Download models
        if: steps.cache-models.outputs.cache-hit != 'true'
        run: |
          pip install gdown
          gdown 1PTZrQwo_tv34J8fAZ6em1DEr1ymFLPvg -O models.zip
          unzip -o models.zip -d face_reg_recog_milvus/app/triton_server
          rm models.zip

      - name: Create .env file
        working-directory: face_reg_recog_milvus
        run: cp .env.example .env

      - name: Build Docker Compose services
        working-directory: face_reg_recog_milvus
        run: |
          docker compose -p face_reg_ci build
          docker image prune -f

      - name: Start Docker Compose services
        working-directory: face_reg_recog_milvus
        shell: bash
        run: |
          docker compose -p face_reg_ci down -v
          docker compose -p face_reg_ci up -d uvicorn_trt_server etcd minio standalone attu mysql mysql-admin redis-server
          # Wait for services to be healthy
          sleep 15

      - name: Run PyTest
        working-directory: face_reg_recog_milvus
        run: docker compose -p face_reg_ci run --rm pytest

      - name: Stop Docker Compose services
        if: always()
        working-directory: face_reg_recog_milvus
        run: docker compose -p face_reg_ci down -v
