name: Python Face Registration & Recognition Test CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: self-hosted-linux
    
    # Run the entire job inside a container
    container:
      image: python:3.12
      options: >-
        --privileged
        --volume /var/run/docker.sock:/var/run/docker.sock
        --volume /usr/bin/docker:/usr/bin/docker
        --network face_recog_milvus
    
    strategy:
      matrix:
        python: ["3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y wget unzip sudo
          # Install docker-compose if not available
          curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Download models
        id: download-models
        run: |
          pip install gdown
          gdown 1PTZrQwo_tv34J8fAZ6em1DEr1ymFLPvg
          unzip -o models.zip -d face_reg_recog_milvus/app/triton_server
          rm models.zip

      - name: Create .env file
        working-directory: face_reg_recog_milvus
        run: |
            touch .env
            echo DOWNLOAD_CACHE_PATH="app/.data" >> .env
            echo DOWNLOAD_IMAGE_PATH="volumes/person_images" >> .env
            echo API_SERVER_PORT=8080 >> .env
            echo MILVUS_HOST=standalone >> .env
            echo MILVUS_PORT=19530 >> .env
            echo ATTU_PORT=3000 >> .env
            echo MYSQL_HOST=mysql >> .env
            echo MYSQL_PORT=3306 >> .env
            echo MYSQL_USER=user >> .env
            echo MYSQL_PASSWORD=pass >> .env
            echo MYSQL_DATABASE=default >> .env
            echo MYSQL_PERSON_TABLE=person >> .env
            echo MYSQL_ROOT_PASSWORD=admin >> .env
            echo PMA_GUI_PORT=8001 >> .env
            echo PMA_HOST=mysql >> .env
            echo PMA_PORT=3306 >> .env
            echo PMA_USER=user >> .env
            echo PMA_PASSWORD=pass >> .env
            echo REDIS_HOST=redis-server >> .env
            echo REDIS_PORT=6379 >> .env

      - name: Add hosts to /etc/hosts
        run: |
            echo "127.0.0.1  standalone" >> /etc/hosts
            echo "127.0.0.1  mysql" >> /etc/hosts
            echo "127.0.0.1  redis-server" >> /etc/hosts

      - name: Build Docker Compose services
        run: |
            docker-compose -f face_reg_recog_milvus/docker-compose.yaml build
            docker image prune -f

      - name: Start Docker Compose & trt server services
        shell: bash
        run: |
          sudo rm -rf face_reg_recog_milvus/volumes
          mkdir -p face_reg_recog_milvus/volumes/person_images
          set -o allexport && source face_reg_recog_milvus/.env && set +o allexport
          docker rm -f uvicorn_trt_server_cont || true
          docker-compose -f face_reg_recog_milvus/docker-compose.yaml up -d etcd minio standalone attu mysql mysql-admin redis-server

          # Wait for services to be ready
          sleep 30

          # Start triton server in the same network
          docker run -d --rm \
            --network face_recog_milvus \
            --name uvicorn_trt_server_cont \
            -p 8081:8081 \
            uvicorn_trt_server:latest \
            tritonserver --model-store app/triton_server/models --allow-grpc=true --allow-http=false --grpc-port=8081

      - name: Run PyTest
        shell: bash
        run: | 
            cd face_reg_recog_milvus && \
            # Load environment variables before running tests
            set -o allexport && source .env && set +o allexport && \
            pip install -r requirements.txt && \
            pip install -r tests/requirements.txt && \
            PYTHONPATH="./" pytest tests -v --tb=short

      - name: Stop Docker Compose services
        run: docker-compose -f face_reg_recog_milvus/docker-compose.yaml down